apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n.fullname" . }}
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "n8n.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "n8n.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "n8n.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: localtime
              mountPath: /etc/localtime
              readOnly: true
            - name: "{{ include "n8n.fullname" . }}-data"
              mountPath: /home/node
            - name: "{{ include "n8n.fullname" . }}-files"
              mountPath: /files
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: N8N_PORT
              value: "{{ .Values.service.port }}"
            {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: "{{ $val }}"
            {{- end }}
          {{- if .Values.envSecretRef }}
          envFrom:
            - secretRef:
                name: {{ .Values.envSecretRef }}
          {{- end }}
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        # data volume
        - name: "{{ include "n8n.fullname" . }}-data"
          {{ if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: "{{ include "n8n.fullname" . }}-data"
          {{ else }}
          emptyDir: { }
          {{ end }}

        # files volume
        - name: "{{ include "n8n.fullname" . }}-files"
          {{ if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: "{{ include "n8n.fullname" . }}-files"
          {{ else }}
          emptyDir: { }
          {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
